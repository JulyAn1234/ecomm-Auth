name: Start all services
on:
  push:
    branches:
      - start_services
jobs:
  Start_QA:
    name: Deploy to QA environment
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v2
      - name: Build & Deploy
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ${{secrets.SSH_HOST_QA}}
          USER_NAME: ${{secrets.USER_NAME}}
          SERVICE_NAME: ${{secrets.SERVICE_NAME}}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} "

              # EC2 instance can be sent commands here
              # The service is put down, the updated changes are pulled from ecr and then the the service
              # is started again
              cd deployment
              sudo docker-compose up -d
              "
  Start_PROD:
    name: Deploy to PROD environment
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v2
      - name: Build & Deploy
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ${{secrets.SSH_HOST_PROD}}
          USER_NAME: ${{secrets.USER_NAME}}
          SERVICE_NAME: ${{secrets.SERVICE_NAME}}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} "

              # EC2 instance can be sent commands here
              # The service is put down, the updated changes are pulled from ecr and then the the service
              # is started again
              cd deployment
              sudo docker-compose up -d
              "
